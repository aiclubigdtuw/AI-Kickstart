# -*- coding: utf-8 -*-
"""SamyaJainMainProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_B7ZjQnxTfoJ5VcmWh1UM7EzqqP-KIAN
"""



"""#MAIN PROJECT"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

pika=pd.read_csv("pokemon.csv")

pika.shape

pika

pika.isnull().sum()

y = pika['target'].values

X= pika.drop(columns=['target'], inplace=False).values

X.shape

y.shape

plt.imshow(X[50].reshape(100,100,3))

y[50]



"""###KNN Algorithm"""

from sklearn.model_selection import train_test_split

#splitting the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

print( X_train.shape, y_train.shape )
print( X_test.shape, y_test.shape)

# importing the KNN 
from sklearn.neighbors import KNeighborsClassifier

model = KNeighborsClassifier(n_neighbors=27)

#training on X_train and y_train
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
y_pred

for i in [1, 35, 37, 50, 60, 15, 70, 20,75]:
    random_img = X_test[i]
    plt.imshow(random_img.reshape(100,100,3))
    plt.show()
    print("Actual Label : ",y_test[i])
    p = model.predict( [random_img] )
    print("Predicted Label : ", p)

model.score(X_test, y_test)

print("Accuracy of KNN algorithm is "+str(model.score(X_test, y_test)*100,)+"%")



"""###Logistic Regression"""

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
y_pred

for i in [1, 35, 37, 50, 60, 15, 70, 20,75]:
    random_img = X_test[i]
    plt.imshow(random_img.reshape(100,100,3))
    plt.show()
    print("Actual Label : ",y_test[i])
    p = model.predict( [random_img] )
    print("Predicted Label : ", p)

model.score(X_test, y_test)

print("Accuracy of Logistic Regression is "+str(model.score(X_test, y_test)*100,)+"%")



"""## So as we can see that the accuracy obtained from Logistic Regression model is 97.36% whereas it was very low i.e 73.68% by KNN!

#Thank you!!!
###-Samya Jain
"""

